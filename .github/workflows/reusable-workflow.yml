name: reusable workflow

on:
  workflow_call:
    inputs:
      stage:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node-version: [14.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    # - name: Configure AWS credentials
    #   uses: aws-actions/configure-aws-credentials@v1
    #   with:
    #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #     aws-region: us-west-1

    # steps:
    # - uses: actions/checkout@v2
    # - name: Use Node.js ${{ matrix.node-version }}
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: ${{ matrix.node-version }}
    # - run: npm ci
    # - run: npm run test
    #   if: ${{ inputs.stage == 'prod' }}

    - name: Terraform Workflow
      working-directory: aws_s3_bucket
      run: "terraform init        \nterraform plan\nterraform terraform apply -auto-approve\n"
      with:
        args: deploy --stage ${{ inputs.stage }}
# env:
#   AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

# - name: serverless deploy
#   uses: serverless/github-action@v3
#   with:
#     args: deploy --stage ${{ inputs.stage }}
#   env:
#     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
